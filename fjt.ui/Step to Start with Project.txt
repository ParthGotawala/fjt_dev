----------------------------------------------------------------------------------------------
	Steps to Start with new Material Design Project - Vaibhav Shah (29 Dec 2017 05:07 P.M.)
----------------------------------------------------------------------------------------------

1.  INSTALL NODE.JS (OPTIONAL IF INSTALLED CHECK VERSION (14.15.0)) (npm version (6.14.8))
    npm- 6.14.2
		[Now working on Latest version too after websocket changes done tested]
		We recommend installing the latest version of node.
		You can download the latest of node.js from here (https://nodejs.org/download/release/v14.15.0/) alternatively there are guides on how to install using a package manager (https://github.com/nodejs/node/wiki).
	
		Once you have installed node you can check that it is working correctly by opening a command prompt / terminal and typing
		> node --version
	
2.  INSTALL GIT (OPTIONAL IF INSTALLED)
		> https://git-for-windows.github.io/
    2.25.1

3.  INSTALL BOWER (OPTIONAL IF INSTALLED)
		To install bower just type the following command into your terminal.
		> npm -g install bower
	
4.  INSTALL GULPJS (OPTIONAL IF INSTALLED)
		To install gulp just type the following command into your terminal.
		> npm -g install gulp-cli

5.  Setup development server
		There are two command you need to run from inside the fjt.ui source folder (the main root directory of the source folder that contains gulpfile.js).

		5.1	INSTALL NODE MODULES
			> npm install

		5.2 INSTALL BOWER PACKAGES
			> bower install

		5.3 IF ANY ERROR IN ABOUVE STEPS THEN INSTALL THIS PACKAGE
			> npm install --global windows-build-tools 
				or 
			> npm install --global --production windows-build-tools@4.0.0
			> npm install --global node-gyp

		-A command you need to run from inside the fjt.api source folder (the main root directory of the source folder that contains package.json).

		5.4 - Install npm install
	
		Important
		=================================================================
		- Copy "socket.io.js" file from API Project "fjt.api\node_modules\socket.io\node_modules\socket.io-client\dist" [Older]
		- If not found than check with this - Copy "socket.io.js" file from API Project "fjt.api\node_modules\socket.io-client\dist" [Newer]
		- Paste "socket.io.js" file to UI Project "fjt.ui\bower_components\angular-socket-io"
		
6.  Starting development server (From Visual Studio 2015)
		Go to the Task Runner Explorer in Visual Studio 2015 and run serve from gulpfile tasks.
	or
	- Start Cmd and Go to developement folder of ui project and type command gulp serve.
	if "gulp serve" not work than please execute with below command
	- npm i native
	again execute "gulp serve"
	


7. To run project you can start with cmd and Go to developement folder of api project and type command node server.
	or 
	Download, Install and open Visual Studio Code and select api project as work space. Than you can run same as Visual Studio 2015.

>> After Executions of above steps you still not able to run project and get Error like below then execute Error Solution steps
	Error Description : Node Sass could not find a binding for your current environment
	Error Solution :  Step:1 Execute command  in node.js npm rebuild node-sass
					  Step:2 Go to: Vs2015 Menu Tools > Options > Projects and Solutions > External Web Tools
									Reorder so that $(PATH) is above $(DevEnvDir)\Extensions\Microsoft\Web Tools\External

----------------------------------------------------------------------------------------------
	Steps to Start with new Material Design Project - Vaibhav Shah (29 Dec 2017 05:07 P.M.)
----------------------------------------------------------------------------------------------

=======================================================================================================================
Addition steps:

1.Automating restarts node application. This modules can do is to watch for file changes and restart the server for you
  - Install nodemon globally.
    - execute " npm i nodemon -g"
  - You can start your application through node command prompt or Visual Code
    - With node command prompt
      - Go to your node project directory (i.e., our API project in our case)
      - execute "nodemon server"
    - Visual Code
      - Select 'Debug' from side menu
      - Open 'Debug' dropdown
      - Select 'Add New Configuration'. It will open launch.json
      - Write 'nodemon' incunfiguration array and select it from autocomplete, it will automatic add configuraion for 'nodemon' in launch.json file.
        - If it is not added then you can put it manually below block.
          {
              "type": "node",
              "request": "launch",
              "name": "nodemon",
              "runtimeExecutable": "nodemon",
              "program": "${workspaceRoot}\\server.js",
              "restart": true,
              "console": "integratedTerminal",
              "internalConsoleOptions": "neverOpen"
          }
        - Once above added to launch file.json, you can select option 'nodemon' from debug dropdown and it will start your project and on file save it will restart automatic.


Install/Uninstall/Update/Upgrade any npm package
===========================================
respecting the semver specified in your package.json
npm update sequelize

save the latest 2.x.x by doing:
npm install sequelize@2 --save-dev

...or the latest 2.1.x by doing:
npm install sequelize@2.1 --save-dev

...or the latest and greatest by doing:
npm install sequelize@latest --save-dev

Note: the last one is no different than doing this:
npm uninstall sequelize --save-dev
npm install sequelize --save-dev
